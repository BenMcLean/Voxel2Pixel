@page "/"
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using SixLabors.ImageSharp
@using SixLabors.ImageSharp.Formats.Png
@using Voxel2Pixel
@using Voxel2Pixel.Color
@using Voxel2Pixel.Interfaces
@using Voxel2Pixel.Model
@using Voxel2Pixel.Pack

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.
<br />
<InputFile OnChange="LoadFile" />
@code {
	public bool IsLoading = false;
	public uint[]? Palette = null;
	public string ImageString = string.Empty;
	public MarkupString ExceptionMessage;
	public CuboidOrientation CuboidOrientation = CuboidOrientation.SOUTH0;
	private async void LoadFile(InputFileChangeEventArgs e)
	{
		IsLoading = true;
		MemoryStream ms = new();
		try
		{
			await e.File.OpenReadStream().CopyToAsync(ms);
			ms.Position = 0;
			Voxel2Pixel.Model.VoxFileModel voxFileModel = new(ms);
			Palette = voxFileModel.Palette;
			IModel model = CuboidOrientation == CuboidOrientation.SOUTH0 ?
				voxFileModel
				: new TurnModel
					{
						Model = voxFileModel,
						CuboidOrientation = CuboidOrientation,
					};
			ImageString = new Sprite(
				perspective: Model.Perspective.Iso,
				model: model,
				voxelColor: new NaiveDimmer(voxFileModel.Palette))
				.Upscale(2)
				.CropOutline()
				.Png()
				.ToBase64String(PngFormat.Instance);
		}
		catch (Exception ex)
		{
			ExceptionMessage = new MarkupString(ex.GetType().Name + ": " + ex.Message + "<br />" + ex.StackTrace);
		}
		IsLoading = false;
		StateHasChanged();
	}
}
<br />
@if (!string.IsNullOrWhiteSpace(ExceptionMessage.ToString()))
{
	<div>@ExceptionMessage</div>
	<br />
}
@if (IsLoading)
{
	<div>Loading...</div>
	<br />
}
else
{
	if (!string.IsNullOrWhiteSpace(ImageString))
	{
		<img src="@ImageString" />
		<br />
	}
	if (Palette is not null)
	{
		foreach (uint color in Palette.Skip(1))
		{
			string hex = "#" + (color >> 8).ToString("X");
			<input type="color" value="@hex" disabled />
		}
	}
	<br />
}
<span>Parent sees: @CuboidOrientation</span>
<br />
<CuboidOrientationInput @bind-Value="@CuboidOrientation" />
<br />
<MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Primary" name="ParentReset" @onclick="@(e => CuboidOrientation = CuboidOrientation.SOUTH0)">Parent Reset</MudButton>
