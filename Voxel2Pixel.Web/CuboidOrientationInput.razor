@using System.ComponentModel
@using System.Globalization
@using Voxel2Pixel.Model
@code {
	[Parameter]
	public CuboidOrientation CuboidOrientation { get; set; } = CuboidOrientation.SOUTH0;
	[Parameter]
	public EventCallback<CuboidOrientation> OnChange { get; set; }
	public string? CuboidOrientationString
	{
		get => CuboidOrientation.ToString();
		set
		{
			if (!CuboidOrientation.ToString().Equals(value, StringComparison.InvariantCultureIgnoreCase))
			{
				CuboidOrientation = (CuboidOrientation)value;
				OnChange.InvokeAsync();
			}
		}
	}
	public void Turn(params Turn[] turns)
	{
		CuboidOrientation = (CuboidOrientation)CuboidOrientation.Turn(turns);
		OnChange.InvokeAsync();
	}
}
<InputSelect class="form-select" @bind-Value="CuboidOrientationString">
	@foreach (string option in CuboidOrientation.Values.Select(e => e.ToString()))
	{
		<option>@option</option>
	}
</InputSelect>
<button name="ClockX" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.ClockX))">X&#x27F3;</button>
<button name="ClockY" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.ClockY))">Y&#x27F3;</button>
<button name="ClockZ" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.ClockZ))">Z&#x27F3;</button>
<button name="CounterX" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.CounterX))">X&#x27F2;</button>
<button name="CounterY" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.CounterY))">Y&#x27F2;</button>
<button name="CounterZ" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.CounterZ))">Z&#x27F2;</button>
<button name="Reset" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.Reset))">Reset</button>
