@using System.ComponentModel
@using System.Globalization
@using Voxel2Pixel.Model
@code {
	[Parameter]
	public CuboidOrientation Value { get; set; } = CuboidOrientation.SOUTH0;
	[Parameter]
	public EventCallback<CuboidOrientation> ValueChanged { get; set; }
	public void Turn(params Turn[] turns) => ValueChanged.InvokeAsync((CuboidOrientation)Value.Turn(turns));
}
<MudSelect T="CuboidOrientation" Value="@Value" ValueChanged="@(value => ValueChanged.InvokeAsync(value))" Class="flex-grow-0">
	@foreach (CuboidOrientation cuboidOrientation in CuboidOrientation.Values)
	{
		<MudSelectItem Value="@cuboidOrientation" />
	}
</MudSelect>
<MudButton Variant="Variant.Filled" Color="Color.Primary" name="ClockX" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.ClockX))">X&#x27F3;</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Primary" name="ClockY" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.ClockY))">Y&#x27F3;</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Primary" name="ClockZ" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.ClockZ))">Z&#x27F3;</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Primary" name="CounterX" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.CounterX))">X&#x27F2;</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Primary" name="CounterY" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.CounterY))">Y&#x27F2;</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Primary" name="CounterZ" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.CounterZ))">Z&#x27F2;</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Primary" name="Reset" @onclick="@(e => Turn(Voxel2Pixel.Model.Turn.Reset))">Reset</MudButton>
